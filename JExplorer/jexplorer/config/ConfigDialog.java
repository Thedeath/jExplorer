/*
 * Copyright (C) 2011 Thedeath<www.fseek.org>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package jexplorer.config;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.LookAndFeel;
import javax.swing.UIManager;
import javax.swing.UIManager.LookAndFeelInfo;
import jexplorer.MainFrame;
import jexplorer.design.LookAndFeelWrapper;
import jexplorer.restarter.Restarter;

/**
 *
 * @author Thedeath<www.fseek.org>
 */
public class ConfigDialog extends javax.swing.JDialog
{
    private OptionsHandler optionsHandler;
    private boolean needsRestart;
    /** Creates new form ConfigDialog */
    public ConfigDialog(java.awt.Frame parent, boolean modal, OptionsHandler optionsHandler)
    {
        super(parent, modal);
        this.setLocationRelativeTo(parent);
        initComponents();
        this.optionsHandler = optionsHandler;
        intValues();
        this.lookAndFeelComboBox.addItemListener(new ItemListener() 
        {
            public void itemStateChanged(ItemEvent e)
            {
                lookAndFeelComboBoxItemStateChanged(e);
            }
        });
        this.iconSetComboBox.addItemListener(new ItemListener() 
        {
            public void itemStateChanged(ItemEvent e)
            {
                iconSetComboBoxItemStateChanged(e);
            }
        });
        
    }
    
    private void intValues()
    {
        languageComboBox.removeAllItems();
        lookAndFeelComboBox.removeAllItems();
        iconSetComboBox.removeAllItems();
        languageComboBox.addItem(optionsHandler.getLang());
        languageComboBox.setSelectedItem(optionsHandler.getLang());
        LookAndFeelInfo[] installedLookAndFeels = UIManager.getInstalledLookAndFeels();
        for(LookAndFeelInfo info : installedLookAndFeels)
        {
            LookAndFeelWrapper wrapper = new LookAndFeelWrapper(info);
            lookAndFeelComboBox.addItem(wrapper);
            if(info.getClassName().equals(optionsHandler.getLookAndFeel().getClassName()))
            {
                lookAndFeelComboBox.setSelectedItem(wrapper);
            }
        }
        windowDecorationCheckBox.setSelected(optionsHandler.isWindowDecEnabled());
        showHiddenFilesCheckBox.setSelected(optionsHandler.isShowHiddenFiles());
        fontSizeSpinner.setValue(optionsHandler.getFontSize());
        File iconDir = new File(MainFrame.mainDir + File.separator + "icons");
        for(File f : iconDir.listFiles())
        {
            IconDirWrapper warp = new IconDirWrapper(f);
            iconSetComboBox.addItem(warp);
            if(f.getAbsolutePath().equals(optionsHandler.getSelectedIconDir().getPath()))
            {
                iconSetComboBox.setSelectedItem(warp);
            }
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        langLabel = new javax.swing.JLabel();
        languageComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        lookAndFeelComboBox = new javax.swing.JComboBox();
        iconSetLabel = new javax.swing.JLabel();
        iconSetComboBox = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        enableWindowDecLabel = new javax.swing.JLabel();
        windowDecorationCheckBox = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        fontSizeLabel = new javax.swing.JLabel();
        fontSizeSpinner = new javax.swing.JSpinner();
        jPanel7 = new javax.swing.JPanel();
        titledSeparator1 = new jexplorer.util.TitledSeparator();
        titledSeparator2 = new jexplorer.util.TitledSeparator();
        titledSeparator3 = new jexplorer.util.TitledSeparator();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        langLabel1 = new javax.swing.JLabel();
        showHiddenFilesCheckBox = new javax.swing.JCheckBox();
        titledSeparator4 = new jexplorer.util.TitledSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel3.setLayout(new java.awt.GridLayout(3, 2, 5, 10));

        langLabel.setText("Language:");
        jPanel3.add(langLabel);

        languageComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        languageComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                languageComboBoxItemStateChanged(evt);
            }
        });
        jPanel3.add(languageComboBox);

        jLabel2.setText("LookAndFeel:*");
        jPanel3.add(jLabel2);

        lookAndFeelComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(lookAndFeelComboBox);

        iconSetLabel.setText("IconSet:");
        jPanel3.add(iconSetLabel);

        iconSetComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel3.add(iconSetComboBox);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 56, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        jPanel5.setLayout(new java.awt.GridLayout(1, 2, 5, 10));

        enableWindowDecLabel.setText("Enable Windowdecoration:*");
        jPanel5.add(enableWindowDecLabel);

        windowDecorationCheckBox.setSelected(true);
        windowDecorationCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                windowDecorationCheckBoxItemStateChanged(evt);
            }
        });
        jPanel5.add(windowDecorationCheckBox);

        jPanel6.setLayout(new java.awt.GridLayout(1, 2, 5, 10));

        fontSizeLabel.setText("Font-Size[%]:*");
        jPanel6.add(fontSizeLabel);

        fontSizeSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                fontSizeSpinnerStateChanged(evt);
            }
        });
        jPanel6.add(fontSizeSpinner);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 56, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 53, Short.MAX_VALUE)
        );

        titledSeparator1.setText("<html><b><u>Look</u></b></html>");

        titledSeparator2.setText("<html><b><u>Performance</u></b></html>");

        titledSeparator3.setText("<html><b><u>Barierre-Free</u></b></html>");

        jButton1.setText("Schlie√üen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE))
                            .addComponent(titledSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE))
                            .addComponent(titledSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE))
                        .addContainerGap())
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(titledSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titledSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titledSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(titledSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        jTabbedPane1.addTab("General", jPanel1);

        jPanel8.setLayout(new java.awt.GridLayout(1, 2, 5, 10));

        langLabel1.setText("Zeige versteckte Dateien:");
        jPanel8.add(langLabel1);

        showHiddenFilesCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                showHiddenFilesCheckBoxItemStateChanged(evt);
            }
        });
        jPanel8.add(showHiddenFilesCheckBox);

        titledSeparator4.setText("<html><b><u>Global</u></b></html>");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE))
                    .addComponent(titledSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titledSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(181, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Files", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lookAndFeelComboBoxItemStateChanged(java.awt.event.ItemEvent evt)
    {
        if(evt.getStateChange() == ItemEvent.SELECTED)
        {
            try
            {
                JComboBox box = (JComboBox) evt.getSource();
                LookAndFeelWrapper selectedItem = (LookAndFeelWrapper) box.getSelectedItem();
                if(!selectedItem.getClassName().equals(optionsHandler.getLookAndFeel().getClassName()))
                {
                    Class c = Class.forName(selectedItem.getClassName());
                    LookAndFeel feel = (LookAndFeel) c.newInstance();
                    LookAndFeelInfo feelInfo = new LookAndFeelInfo(feel.getName(), feel.getClass().getName());
                    optionsHandler.setLookAndFeel(feelInfo);
                    optionsHandler.saveConfig();
                    this.requestFocus();
                    needsRestart = true;
                }
                else
                {
                    needsRestart = false;
                }
            } catch (Exception ex)
            {
                ex.printStackTrace();
            }
        }
    }
    
    
    private void languageComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_languageComboBoxItemStateChanged
    {//GEN-HEADEREND:event_languageComboBoxItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED)
        {
            JComboBox box = (JComboBox)evt.getSource();
            String lang = (String) box.getSelectedItem();
            if(!lang.equals(optionsHandler.getLang()))
            {
                optionsHandler.setLang(lang);
                optionsHandler.saveConfig();
            }
        }
}//GEN-LAST:event_languageComboBoxItemStateChanged

    private void windowDecorationCheckBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_windowDecorationCheckBoxItemStateChanged
    {//GEN-HEADEREND:event_windowDecorationCheckBoxItemStateChanged
        if(optionsHandler.isWindowDecEnabled() == windowDecorationCheckBox.isSelected())
        {
            needsRestart = false;
        }
        {
            if(evt.getStateChange() == ItemEvent.SELECTED)
            {
                optionsHandler.setWindowDecEnabled(true);
            }
            else
            {
                optionsHandler.setWindowDecEnabled(false);
            }
            needsRestart = true;
            optionsHandler.saveConfig();
        }
}//GEN-LAST:event_windowDecorationCheckBoxItemStateChanged

    private void fontSizeSpinnerStateChanged(javax.swing.event.ChangeEvent evt)//GEN-FIRST:event_fontSizeSpinnerStateChanged
    {//GEN-HEADEREND:event_fontSizeSpinnerStateChanged
        JSpinner spinner = (JSpinner)evt.getSource();
        int size = (Integer)spinner.getValue();
        if(size != optionsHandler.getFontSize())
        {
            optionsHandler.setFontSize(size);
            optionsHandler.saveConfig();
            needsRestart = true;
        }
        else
        {
            needsRestart = false;
        }
}//GEN-LAST:event_fontSizeSpinnerStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        close();
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        close();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_formComponentShown
    {//GEN-HEADEREND:event_formComponentShown
        this.needsRestart = false;
    }//GEN-LAST:event_formComponentShown

    private void showHiddenFilesCheckBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_showHiddenFilesCheckBoxItemStateChanged
    {//GEN-HEADEREND:event_showHiddenFilesCheckBoxItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED)
        {
            optionsHandler.setShowHiddenFiles(true);
        }
        else
        {
            optionsHandler.setShowHiddenFiles(false);
        }
        optionsHandler.saveConfig();
    }//GEN-LAST:event_showHiddenFilesCheckBoxItemStateChanged

    private void askRestart()
    {
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Das Programm muss neugestartet werden um die √Ñnderungen zu √úbernehmen.\nM√∂chtest du nun neustarten ?");
        if(JOptionPane.YES_OPTION == showConfirmDialog)
        {
            Restarter.main(new String[]{"true"});
        }
    }
    
    private void close()
    {
        this.setVisible(false);
        if(this.needsRestart)
        {
            askRestart();
        }
    }
    
    private void iconSetComboBoxItemStateChanged(java.awt.event.ItemEvent evt)
    {
        if(evt.getStateChange() == ItemEvent.SELECTED)
        {
            try
            {
                JComboBox box = (JComboBox)evt.getSource();
                IconDirWrapper dir = (IconDirWrapper) box.getSelectedItem();
                if(!dir.getFile().getCanonicalPath().equals(optionsHandler.getSelectedIconDir().getCanonicalPath()))
                {
                    optionsHandler.setSelectedIconDir(dir.getFile());
                    optionsHandler.saveConfig();
                    needsRestart = true;
                }
            } catch (IOException ex)
            {
                Logger.getLogger(ConfigDialog.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel enableWindowDecLabel;
    private javax.swing.JLabel fontSizeLabel;
    private javax.swing.JSpinner fontSizeSpinner;
    private javax.swing.JComboBox iconSetComboBox;
    private javax.swing.JLabel iconSetLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel langLabel;
    private javax.swing.JLabel langLabel1;
    private javax.swing.JComboBox languageComboBox;
    private javax.swing.JComboBox lookAndFeelComboBox;
    private javax.swing.JCheckBox showHiddenFilesCheckBox;
    private jexplorer.util.TitledSeparator titledSeparator1;
    private jexplorer.util.TitledSeparator titledSeparator2;
    private jexplorer.util.TitledSeparator titledSeparator3;
    private jexplorer.util.TitledSeparator titledSeparator4;
    private javax.swing.JCheckBox windowDecorationCheckBox;
    // End of variables declaration//GEN-END:variables
}
